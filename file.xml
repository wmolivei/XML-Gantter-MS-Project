<?php

$xmlDoc = new DOMDocument('1.0', "UTF-8");
$xmlDoc->xmlStandalone = true;

header('Content-type: text/xml');
header('Content-Disposition: attachment; filename="my xml file.xml"');

//geral
$Project               			= $xmlDoc->createElement('Project');
$ProjectAttibute 		  		  = $xmlDoc->createAttribute('xmlns');
$ProjectAttibute->value     = 'http://schemas.microsoft.com/project';
$Project->appendChild($ProjectAttibute);

$P_SaveVersion         			= $xmlDoc->createElement('SaveVersion', '12');
$P_Name                			= $xmlDoc->createElement('Name');
$P_Author              			= $xmlDoc->createElement('Author');
$P_CreationDate        			= $xmlDoc->createElement('CreationDate');
$P_LastSaved           			= $xmlDoc->createElement('LastSaved');
$P_StartDate           			= $xmlDoc->createElement('StartDate');
$P_FinishDate          			= $xmlDoc->createElement('FinishDate');
$P_DefaultStartTime    			= $xmlDoc->createElement('DefaultStartTime','08:00:00');
$P_DefaultFinishTime   			= $xmlDoc->createElement('DefaultFinishTime' ,'17:00:00');
$P_MinutesPerDay       			= $xmlDoc->createElement('MinutesPerDay', '480');
$P_MinutesPerWeek      			= $xmlDoc->createElement('MinutesPerWeek', '2400');
$P_DaysPerMonth        			= $xmlDoc->createElement('DaysPerMonth', '20');
$P_WeekStartDay        			= $xmlDoc->createElement('WeekStartDay','0');

//tasks
$P_Tasks  						      = $xmlDoc->createElement('Tasks');
$P_T_Task 						      = $xmlDoc->createElement('Task');
$P_T_T_UID 					        = $xmlDoc->createElement('UID');
$P_T_T_ID  						      = $xmlDoc->createElement('ID');
$P_T_T_Name 			          = $xmlDoc->createElement('Name');
$P_T_T_Type  					      = $xmlDoc->createElement('Type', '0');
$P_T_T_IsNull  					    = $xmlDoc->createElement('IsNull', '0');
$P_T_T_CreateDate  				  = $xmlDoc->createElement('CreateDate');
$P_T_T_WBS  					      = $xmlDoc->createElement('WBS');
$P_T_T_OutlineNumber 			  = $xmlDoc->createElement('OutlineNumber', '0');
$P_T_T_OutlineLevel  			  = $xmlDoc->createElement('OutlineLevel', '0');
$P_T_T_Priority  				    = $xmlDoc->createElement('Priority');
$P_T_T_Start  					    = $xmlDoc->createElement('Start');
$P_T_T_Finish  					    = $xmlDoc->createElement('Finish');
$P_T_T_Duration  				    = $xmlDoc->createElement('Duration');
$P_T_T_DurationFormat  			= $xmlDoc->createElement('DurationFormat','39');
$P_T_T_Work  					      = $xmlDoc->createElement('Work');
$P_T_T_ResumeValid  			  = $xmlDoc->createElement('ResumeValid', '0');
$P_T_T_EffortDriven  			  = $xmlDoc->createElement('EffortDriven', '0');
$P_T_T_Recurring  				  = $xmlDoc->createElement('Recurring', '0');
$P_T_T_OverAllocated  			= $xmlDoc->createElement('OverAllocated', '0');
$P_T_T_Estimated  				  = $xmlDoc->createElement('Estimated', '1');
$P_T_T_Milestone  				  = $xmlDoc->createElement('Milestone', '0');
$P_T_T_Summary  				    = $xmlDoc->createElement('Summary', '1');
$P_T_T_Hidden  					    = $xmlDoc->createElement('Hidden', '1');
$P_T_T_Critical  				    = $xmlDoc->createElement('Critical', '0');
$P_T_T_IsSubproject  			  = $xmlDoc->createElement('IsSubproject', '0');
$P_T_T_IsSubprojectReadOnly = $xmlDoc->createElement('IsSubprojectReadOnly', '0');
$P_T_T_ExternalTask  			  = $xmlDoc->createElement('ExternalTask', '0');
$P_T_T_EarlyStart  				  = $xmlDoc->createElement('EarlyStart');
$P_T_T_EarlyFinish  			  = $xmlDoc->createElement('EarlyFinish', '0');
$P_T_T_LateStart  				  = $xmlDoc->createElement('LateStart', '0');
$P_T_T_LateFinish  				  = $xmlDoc->createElement('LateFinish', '0');
$P_T_T_StartVariance  			= $xmlDoc->createElement('StartVariance', '0');
$P_T_T_FinishVariance  			= $xmlDoc->createElement('FinishVariance', '0');
$P_T_T_WorkVariance  			  = $xmlDoc->createElement('WorkVariance', '0');
$P_T_T_FreeSlack  				  = $xmlDoc->createElement('FreeSlack', '0');
$P_T_T_TotalSlack  				  = $xmlDoc->createElement('TotalSlack', '0');
$P_T_T_FixedCost  				  = $xmlDoc->createElement('FixedCost', '0');
$P_T_T_FixedCostAccrual  		= $xmlDoc->createElement('FixedCostAccrual', '3');
$P_T_T_PercentComplete  		= $xmlDoc->createElement('PercentComplete', '0');
$P_T_T_PercentWorkComplete	= $xmlDoc->createElement('PercentWorkComplete', '0');
$P_T_T_Cost  					      = $xmlDoc->createElement('Cost', '0');
$P_T_T_OvertimeCost  			  = $xmlDoc->createElement('OvertimeCost', '0');
$P_T_T_OvertimeWork  			  = $xmlDoc->createElement('OvertimeWork','PT0H0M0S');
$P_T_T_ActualStart  			  = $xmlDoc->createElement('ActualStart');
$P_T_T_ActualDuration  			= $xmlDoc->createElement('ActualDuration', 'PT0H0M0S');
$P_T_T_ActualCost  				  = $xmlDoc->createElement('ActualCost', '0');
$P_T_T_ActualOvertimeCost  	= $xmlDoc->createElement('ActualOvertimeCost', '0');
$P_T_T_ActualWork  				  = $xmlDoc->createElement('ActualWork', 'PT0H0M0S');
$P_T_T_ActualOvertimeWork  	= $xmlDoc->createElement('ActualOvertimeWork', 'PT0H0M0S');
$P_T_T_RegularWork  			  = $xmlDoc->createElement('RegularWork', 'PT0H0M0S');
$P_T_T_RemainingDuration  	= $xmlDoc->createElement('RemainingDuration');
$P_T_T_RemainingCost  			= $xmlDoc->createElement('RemainingCost', '0');
$P_T_T_RemainingWork  			= $xmlDoc->createElement('RemainingWork');
$P_T_T_RemainingOvertimeCost= $xmlDoc->createElement('RemainingOvertimeCost','0');
$P_T_T_RemainingOvertimeWork= $xmlDoc->createElement('RemainingOvertimeWork', 'PT0H0M0S');
$P_T_T_ACWP  					      = $xmlDoc->createElement('ACWP', '0');
$P_T_T_CV  						      = $xmlDoc->createElement('CV', '0');
$P_T_T_ConstraintType  			= $xmlDoc->createElement('ConstraintType', '0');
$P_T_T_CalendarUID  			  = $xmlDoc->createElement('CalendarUID', '1');
$P_T_T_IgnoreResourceCalendar= $xmlDoc->createElement('IgnoreResourceCalendar', '0');
$P_T_T_HideBar  				    = $xmlDoc->createElement('HideBar', '0');
$P_T_T_Rollup  					    = $xmlDoc->createElement('Rollup', '0');
$P_T_T_BCWS  					      = $xmlDoc->createElement('BCWS', '0');
$P_T_T_BCWP  					      = $xmlDoc->createElement('BCWP', '0');
$P_T_T_PhysicalPercentComplete= $xmlDoc->createElement('PhysicalPercentComplete', '0');
$P_T_T_EarnedValueMethod    = $xmlDoc->createElement('EarnedValueMethod', '0');
$P_T_T_IsPublished 			    = $xmlDoc->createElement('IsPublished', '1');
$P_T_T_CommitmentType  			= $xmlDoc->createElement('CommitmentType', '0');
$P_T_T_BoldFont  				    = $xmlDoc->createElement('BoldFont', '0');
$P_T_T_ItalicFont  				  = $xmlDoc->createElement('ItalicFont', '0');
$P_T_T_RecommendationId 	  = $xmlDoc->createElement('RecommendationId', 'null');
$P_T_T_ModifiedDate 	      = $xmlDoc->createElement('ModifiedDate');


// Resources

$P_Resources  					    = $xmlDoc->createElement('Resources');
$P_P_Resource 					    = $xmlDoc->createElement('Resource');
$P_P_R_UID  					      = $xmlDoc->createElement('UID');
$P_P_R_ID  						      = $xmlDoc->createElement('ID');
$P_P_R_Name  					      = $xmlDoc->createElement('Name');
$P_P_R_Type  					      = $xmlDoc->createElement('Type', '1');
$P_P_R_IsNull  					    = $xmlDoc->createElement('IsNull', '0');
$P_P_R_WorkGroup  				  = $xmlDoc->createElement('WorkGroup', '0');
$P_P_R_MaxUnits  				    = $xmlDoc->createElement('MaxUnits', '1');
$P_P_R_PeakUnits  				  = $xmlDoc->createElement('PeakUnits', '0');
$P_P_R_OverAllocated  			= $xmlDoc->createElement('OverAllocated', '1');
$P_P_R_CanLevel  				    = $xmlDoc->createElement('CanLevel', '1');
$P_P_R_AccrueAt  				    = $xmlDoc->createElement('AccrueAt', '3');
$P_P_R_Work  					      = $xmlDoc->createElement('Work', 'PT0H0M0S');
$P_P_R_RegularWork  			  = $xmlDoc->createElement('RegularWork', 'PT0H0M0S');
$P_P_R_OvertimeWork  			  = $xmlDoc->createElement('OvertimeWork', 'PT0H0M0S');
$P_P_R_ActualWork  				  = $xmlDoc->createElement('ActualWork', 'PT0H0M0S');
$P_P_R_RemainingWork  			= $xmlDoc->createElement('RemainingWork', 'PT0H0M0S');
$P_P_R_ActualOvertimeWork  	= $xmlDoc->createElement('ActualOvertimeWork', 'PT0H0M0S');
$P_P_R_RemainingOvertimeWork= $xmlDoc->createElement('RemainingOvertimeWork', 'PT0H0M0S');
$P_P_R_PercentWorkComplete  = $xmlDoc->createElement('PercentWorkComplete','0');
$P_P_R_StandardRate  			  = $xmlDoc->createElement('StandardRate','0');
$P_P_R_StandardRateFormat  	= $xmlDoc->createElement('StandardRateFormat','2');
$P_P_R_Cost  					      = $xmlDoc->createElement('Cost','0');
$P_P_R_EmailAddress  			  = $xmlDoc->createElement('EmailAddress');
$P_P_R_OvertimeRate  			  = $xmlDoc->createElement('OvertimeRate','0');
$P_P_R_OvertimeRateFormat  	= $xmlDoc->createElement('OvertimeRateFormat','2');
$P_P_R_OvertimeCost  			  = $xmlDoc->createElement('OvertimeCost','0');
$P_P_R_CostPerUse  				  = $xmlDoc->createElement('CostPerUse','0');
$P_P_R_ActualCost  				  = $xmlDoc->createElement('ActualCost','0');
$P_P_R_ActualOvertimeCost  	= $xmlDoc->createElement('ActualOvertimeCost','0');
$P_P_R_RemainingCost  			= $xmlDoc->createElement('RemainingCost','0');
$P_P_R_RemainingOvertimeCost= $xmlDoc->createElement('RemainingOvertimeCost','0');
$P_P_R_WorkVariance  			  = $xmlDoc->createElement('WorkVariance','0');
$P_P_R_CostVariance  			  = $xmlDoc->createElement('CostVariance','0');
$P_P_R_SV  						      = $xmlDoc->createElement('SV','0');
$P_P_R_CV  						      = $xmlDoc->createElement('CV','0');
$P_P_R_ACWP  					      = $xmlDoc->createElement('ACWP','0');
$P_P_R_CalendarUID  			  = $xmlDoc->createElement('CalendarUID','6');
$P_P_R_BCWS  					      = $xmlDoc->createElement('BCWS','0');
$P_P_R_BCWP  					      = $xmlDoc->createElement('BCWP','0');
$P_P_R_IsGeneric  				  = $xmlDoc->createElement('IsGeneric','0');
$P_P_R_IsInactive  				  = $xmlDoc->createElement('IsInactive','0');
$P_P_R_IsEnterprise  			  = $xmlDoc->createElement('IsEnterprise','0');
$P_P_R_BookingType  			  = $xmlDoc->createElement('BookingType','0');
$P_P_R_CreationDate  			  = $xmlDoc->createElement('CreationDate');	
$P_P_R_IsCostResource  			= $xmlDoc->createElement('IsCostResource','0');
$P_P_R_IsBudget  				    = $xmlDoc->createElement('IsBudget','0');
$P_P_R_RecommendationId  		= $xmlDoc->createElement('RecommendationId','null');


//Assignments

$P_Assignments  				    = $xmlDoc->createElement('Assignments');
$P_A_Assignment 				    = $xmlDoc->createElement('Assignment');
$P_A_A_UID  					      = $xmlDoc->createElement('UID');
$P_A_A_TaskUID  				    = $xmlDoc->createElement('TaskUID');
$P_A_A_ResourceUID  			  = $xmlDoc->createElement('ResourceUID');
$P_A_A_PercentWorkComplete  = $xmlDoc->createElement('PercentWorkComplete', '0');
$P_A_A_ActualCost  				  = $xmlDoc->createElement('ActualCost', '0');
$P_A_A_ActualOvertimeCost  	= $xmlDoc->createElement('ActualOvertimeCost', '0');
$P_A_A_ActualOvertimeWork  	= $xmlDoc->createElement('ActualOvertimeWork', 'PT0H0M0S');
$P_A_A_ActualWork  				  = $xmlDoc->createElement('ActualWork', 'PT0H0M0S');
$P_A_A_ACWP  					      = $xmlDoc->createElement('ACWP', '0');
$P_A_A_Confirmed  				  = $xmlDoc->createElement('Confirmed', '0');
$P_A_A_Cost  					      = $xmlDoc->createElement('Cost', '0');
$P_A_A_CostRateTable  			= $xmlDoc->createElement('CostRateTable', '0');
$P_A_A_CostVariance  			  = $xmlDoc->createElement('CostVariance', '0');
$P_A_A_CV  						      = $xmlDoc->createElement('CV', '0');
$P_A_A_Delay  					    = $xmlDoc->createElement('Delay', '0');
$P_A_A_Finish  					    = $xmlDoc->createElement('Finish');
$P_A_A_FinishVariance  			= $xmlDoc->createElement('FinishVariance', '0');
$P_A_A_WorkVariance  			  = $xmlDoc->createElement('WorkVariance');
$P_A_A_HasFixedRateUnits  	= $xmlDoc->createElement('HasFixedRateUnits', '1');
$P_A_A_FixedMaterial  			= $xmlDoc->createElement('FixedMaterial', '0');
$P_A_A_LevelingDelay  			= $xmlDoc->createElement('LevelingDelay', '0');
$P_A_A_LevelingDelayFormat  = $xmlDoc->createElement('LevelingDelayFormat', '7');
$P_A_A_LinkedFields  			  = $xmlDoc->createElement('LinkedFields', '0');
$P_A_A_Milestone  				  = $xmlDoc->createElement('Milestone', '0');
$P_A_A_Overallocated  			= $xmlDoc->createElement('Overallocated', '0');
$P_A_A_OvertimeCost  			  = $xmlDoc->createElement('OvertimeCost', '0');
$P_A_A_OvertimeWork  			  = $xmlDoc->createElement('OvertimeWork', 'PT0H0M0S');
$P_A_A_RegularWork  			  = $xmlDoc->createElement('RegularWork');
$P_A_A_RemainingCost  			= $xmlDoc->createElement('RemainingCost', '0');
$P_A_A_RemainingOvertimeCost= $xmlDoc->createElement('RemainingOvertimeCost', '0');
$P_A_A_RemainingOvertimeWork= $xmlDoc->createElement('RemainingOvertimeWork', 'PT0H0M0S');
$P_A_A_RemainingWork  			= $xmlDoc->createElement('RemainingWork');
$P_A_A_ResponsePending  		= $xmlDoc->createElement('ResponsePending', '0');
$P_A_A_Start  					    = $xmlDoc->createElement('Start');
$P_A_A_Stop  					      = $xmlDoc->createElement('Stop');
$P_A_A_Resume  					    = $xmlDoc->createElement('Resume');
$P_A_A_StartVariance  			= $xmlDoc->createElement('StartVariance', '0');
$P_A_A_Units  					    = $xmlDoc->createElement('Units', '1');
$P_A_A_UpdateNeeded  			  = $xmlDoc->createElement('UpdateNeeded','0');
$P_A_A_VAC  					      = $xmlDoc->createElement('VAC', '0');
$P_A_A_Work  					      = $xmlDoc->createElement('Work');
$P_A_A_WorkContour  			  = $xmlDoc->createElement('WorkContour', '0');
$P_A_A_BCWS  					      = $xmlDoc->createElement('BCWS', '0');
$P_A_A_BCWP  					      = $xmlDoc->createElement('BCWP', '0');
$P_A_A_BookingType  			  = $xmlDoc->createElement('BookingType', '0');
$P_A_A_CreationDate  			  = $xmlDoc->createElement('CreationDate');



//Atribuições
//Geral
$xmlDoc->appendChild($Project);
$Project->appendChild($P_SaveVersion);
$Project->appendChild($P_Name);
$Project->appendChild($P_Author);
$Project->appendChild($P_CreationDate);
$Project->appendChild($P_LastSaved);
$Project->appendChild($P_StartDate);
$Project->appendChild($P_FinishDate);
$Project->appendChild($P_DefaultStartTime);
$Project->appendChild($P_DefaultFinishTime);
$Project->appendChild($P_MinutesPerDay);
$Project->appendChild($P_MinutesPerWeek);
$Project->appendChild($P_DaysPerMonth);
$Project->appendChild($P_WeekStartDay);


//tasks

$Project->appendChild($P_Tasks);
$P_Tasks->appendChild($P_T_Task);
$P_T_Task->appendChild($P_T_T_UID);
$P_T_Task->appendChild($P_T_T_ID);
$P_T_Task->appendChild($P_T_T_Name);
$P_T_Task->appendChild($P_T_T_Type);
$P_T_Task->appendChild($P_T_T_IsNull);
$P_T_Task->appendChild($P_T_T_CreateDate);
$P_T_Task->appendChild($P_T_T_WBS);
$P_T_Task->appendChild($P_T_T_OutlineNumber);
$P_T_Task->appendChild($P_T_T_OutlineLevel);
$P_T_Task->appendChild($P_T_T_Priority);
$P_T_Task->appendChild($P_T_T_Start);
$P_T_Task->appendChild($P_T_T_Finish);
$P_T_Task->appendChild($P_T_T_Duration);
$P_T_Task->appendChild($P_T_T_DurationFormat);
$P_T_Task->appendChild($P_T_T_Work);
$P_T_Task->appendChild($P_T_T_ResumeValid);
$P_T_Task->appendChild($P_T_T_EffortDriven);
$P_T_Task->appendChild($P_T_T_Recurring);
$P_T_Task->appendChild($P_T_T_OverAllocated);
$P_T_Task->appendChild($P_T_T_Estimated);
$P_T_Task->appendChild($P_T_T_Milestone);
$P_T_Task->appendChild($P_T_T_Summary);
$P_T_Task->appendChild($P_T_T_Hidden);
$P_T_Task->appendChild($P_T_T_Critical);
$P_T_Task->appendChild($P_T_T_IsSubproject);
$P_T_Task->appendChild($P_T_T_IsSubprojectReadOnly);
$P_T_Task->appendChild($P_T_T_ExternalTask);
$P_T_Task->appendChild($P_T_T_EarlyStart);
$P_T_Task->appendChild($P_T_T_EarlyFinish);
$P_T_Task->appendChild($P_T_T_LateStart);
$P_T_Task->appendChild($P_T_T_LateFinish);
$P_T_Task->appendChild($P_T_T_StartVariance);
$P_T_Task->appendChild($P_T_T_FinishVariance);
$P_T_Task->appendChild($P_T_T_WorkVariance);
$P_T_Task->appendChild($P_T_T_FreeSlack);
$P_T_Task->appendChild($P_T_T_TotalSlack);
$P_T_Task->appendChild($P_T_T_FixedCost);
$P_T_Task->appendChild($P_T_T_FixedCostAccrual);
$P_T_Task->appendChild($P_T_T_PercentComplete);
$P_T_Task->appendChild($P_T_T_PercentWorkComplete);
$P_T_Task->appendChild($P_T_T_Cost);
$P_T_Task->appendChild($P_T_T_OvertimeCost);
$P_T_Task->appendChild($P_T_T_OvertimeWork);
$P_T_Task->appendChild($P_T_T_ActualStart);
$P_T_Task->appendChild($P_T_T_ActualDuration);
$P_T_Task->appendChild($P_T_T_ActualCost);
$P_T_Task->appendChild($P_T_T_ActualOvertimeCost);
$P_T_Task->appendChild($P_T_T_ActualWork);
$P_T_Task->appendChild($P_T_T_ActualOvertimeWork);
$P_T_Task->appendChild($P_T_T_RegularWork);
$P_T_Task->appendChild($P_T_T_RemainingDuration);
$P_T_Task->appendChild($P_T_T_RemainingCost);
$P_T_Task->appendChild($P_T_T_RemainingWork);
$P_T_Task->appendChild($P_T_T_RemainingOvertimeCost);
$P_T_Task->appendChild($P_T_T_RemainingOvertimeWork);
$P_T_Task->appendChild($P_T_T_ACWP);
$P_T_Task->appendChild($P_T_T_CV);
$P_T_Task->appendChild($P_T_T_ConstraintType);
$P_T_Task->appendChild($P_T_T_CalendarUID);
$P_T_Task->appendChild($P_T_T_IgnoreResourceCalendar);
$P_T_Task->appendChild($P_T_T_HideBar);
$P_T_Task->appendChild($P_T_T_Rollup);
$P_T_Task->appendChild($P_T_T_BCWS);
$P_T_Task->appendChild($P_T_T_BCWP);
$P_T_Task->appendChild($P_T_T_PhysicalPercentComplete);
$P_T_Task->appendChild($P_T_T_EarnedValueMethod);
$P_T_Task->appendChild($P_T_T_IsPublished);
$P_T_Task->appendChild($P_T_T_CommitmentType);
$P_T_Task->appendChild($P_T_T_BoldFont);
$P_T_Task->appendChild($P_T_T_ItalicFont);
$P_T_Task->appendChild($P_T_T_RecommendationId);
$P_T_Task->appendChild($P_T_T_ModifiedDate);


//Resources

$Project->appendChild($P_Resources);
$P_Resources->appendChild($P_P_Resource);
$P_P_Resource->appendChild($P_P_R_UID);
$P_P_Resource->appendChild($P_P_R_ID);
$P_P_Resource->appendChild($P_P_R_Name);
$P_P_Resource->appendChild($P_P_R_Type);
$P_P_Resource->appendChild($P_P_R_IsNull);
$P_P_Resource->appendChild($P_P_R_WorkGroup);
$P_P_Resource->appendChild($P_P_R_MaxUnits);
$P_P_Resource->appendChild($P_P_R_PeakUnits);
$P_P_Resource->appendChild($P_P_R_OverAllocated);
$P_P_Resource->appendChild($P_P_R_CanLevel);
$P_P_Resource->appendChild($P_P_R_AccrueAt);
$P_P_Resource->appendChild($P_P_R_Work);
$P_P_Resource->appendChild($P_P_R_RegularWork);
$P_P_Resource->appendChild($P_P_R_OvertimeWork);
$P_P_Resource->appendChild($P_P_R_ActualWork);
$P_P_Resource->appendChild($P_P_R_RemainingWork);
$P_P_Resource->appendChild($P_P_R_ActualOvertimeWork);
$P_P_Resource->appendChild($P_P_R_RemainingOvertimeWork);
$P_P_Resource->appendChild($P_P_R_PercentWorkComplete);
$P_P_Resource->appendChild($P_P_R_StandardRate);
$P_P_Resource->appendChild($P_P_R_StandardRateFormat);
$P_P_Resource->appendChild($P_P_R_Cost);
$P_P_Resource->appendChild($P_P_R_EmailAddress);
$P_P_Resource->appendChild($P_P_R_OvertimeRate);
$P_P_Resource->appendChild($P_P_R_OvertimeRateFormat);
$P_P_Resource->appendChild($P_P_R_OvertimeCost);
$P_P_Resource->appendChild($P_P_R_CostPerUse);
$P_P_Resource->appendChild($P_P_R_ActualCost);
$P_P_Resource->appendChild($P_P_R_ActualOvertimeCost);
$P_P_Resource->appendChild($P_P_R_RemainingCost);
$P_P_Resource->appendChild($P_P_R_RemainingOvertimeCost);
$P_P_Resource->appendChild($P_P_R_WorkVariance);
$P_P_Resource->appendChild($P_P_R_CostVariance);
$P_P_Resource->appendChild($P_P_R_SV);
$P_P_Resource->appendChild($P_P_R_CV);
$P_P_Resource->appendChild($P_P_R_ACWP);
$P_P_Resource->appendChild($P_P_R_CalendarUID);
$P_P_Resource->appendChild($P_P_R_BCWS);
$P_P_Resource->appendChild($P_P_R_BCWP);
$P_P_Resource->appendChild($P_P_R_IsGeneric);
$P_P_Resource->appendChild($P_P_R_IsInactive);
$P_P_Resource->appendChild($P_P_R_IsEnterprise);
$P_P_Resource->appendChild($P_P_R_BookingType);
$P_P_Resource->appendChild($P_P_R_CreationDate);
$P_P_Resource->appendChild($P_P_R_IsCostResource);
$P_P_Resource->appendChild($P_P_R_IsBudget);
$P_P_Resource->appendChild($P_P_R_RecommendationId);


//Assignments

$Project->appendChild($P_Assignments);
$P_Assignments->appendChild($P_A_Assignment);
$P_A_Assignment->appendChild($P_A_A_UID);
$P_A_Assignment->appendChild($P_A_A_TaskUID);
$P_A_Assignment->appendChild($P_A_A_ResourceUID);
$P_A_Assignment->appendChild($P_A_A_PercentWorkComplete);
$P_A_Assignment->appendChild($P_A_A_ActualCost);
$P_A_Assignment->appendChild($P_A_A_ActualOvertimeCost);
$P_A_Assignment->appendChild($P_A_A_ActualOvertimeWork);
$P_A_Assignment->appendChild($P_A_A_ActualWork);
$P_A_Assignment->appendChild($P_A_A_ACWP);
$P_A_Assignment->appendChild($P_A_A_Confirmed);
$P_A_Assignment->appendChild($P_A_A_Cost);
$P_A_Assignment->appendChild($P_A_A_CostRateTable);
$P_A_Assignment->appendChild($P_A_A_CostVariance);
$P_A_Assignment->appendChild($P_A_A_CostRateTable);
$P_A_Assignment->appendChild($P_A_A_CV);
$P_A_Assignment->appendChild($P_A_A_Delay);
$P_A_Assignment->appendChild($P_A_A_Finish);
$P_A_Assignment->appendChild($P_A_A_FinishVariance);
$P_A_Assignment->appendChild($P_A_A_WorkVariance);
$P_A_Assignment->appendChild($P_A_A_HasFixedRateUnits);
$P_A_Assignment->appendChild($P_A_A_FixedMaterial);
$P_A_Assignment->appendChild($P_A_A_LevelingDelay);
$P_A_Assignment->appendChild($P_A_A_LevelingDelayFormat);
$P_A_Assignment->appendChild($P_A_A_LinkedFields);
$P_A_Assignment->appendChild($P_A_A_Milestone);
$P_A_Assignment->appendChild($P_A_A_Overallocated);
$P_A_Assignment->appendChild($P_A_A_OvertimeCost);
$P_A_Assignment->appendChild($P_A_A_OvertimeWork);
$P_A_Assignment->appendChild($P_A_A_RegularWork);
$P_A_Assignment->appendChild($P_A_A_RemainingCost);
$P_A_Assignment->appendChild($P_A_A_RemainingOvertimeCost);
$P_A_Assignment->appendChild($P_A_A_RemainingOvertimeWork);
$P_A_Assignment->appendChild($P_A_A_RemainingWork);
$P_A_Assignment->appendChild($P_A_A_ResponsePending);
$P_A_Assignment->appendChild($P_A_A_Start);
$P_A_Assignment->appendChild($P_A_A_Stop);
$P_A_Assignment->appendChild($P_A_A_Resume);
$P_A_Assignment->appendChild($P_A_A_StartVariance);
$P_A_Assignment->appendChild($P_A_A_Units);
$P_A_Assignment->appendChild($P_A_A_UpdateNeeded);
$P_A_Assignment->appendChild($P_A_A_VAC);
$P_A_Assignment->appendChild($P_A_A_Work);
$P_A_Assignment->appendChild($P_A_A_WorkContour);
$P_A_Assignment->appendChild($P_A_A_BCWS);
$P_A_Assignment->appendChild($P_A_A_BCWP);
$P_A_Assignment->appendChild($P_A_A_BookingType);
$P_A_Assignment->appendChild($P_A_A_CreationDate);




header('content-type: text/xml');
echo $xmlDoc->saveXML();

?>
